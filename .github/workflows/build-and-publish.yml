name: Test and push docker image

on:
  push:
    branches:
      - main
    paths:
      - "**.py"
      - "**.html"
      - "**.js"
      - "**.css"
      - .github/workflows/build-and-publish.yml
      - Dockerfile
      - Pipfile
      - Pipfile.lock
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip pipenv wheel
    - name: Install dependencies
      run: |
        pipenv requirements --dev > requirements.txt
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  build-and-push-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_IMAGENAME }}
          github-token: ${{ github.token }}
      
      - name: Set short git commit ref
        id: vars
        run: |
          calculated_sha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculated_sha-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: | 
            ${{ steps.meta.outputs.tags }}
            ${{ vars.DOCKERHUB_IMAGENAME }}:latest
            ${{ vars.DOCKERHUB_IMAGENAME }}:${{ github.sha }}
            ${{ vars.DOCKERHUB_IMAGENAME }}:${{ env.COMMIT_SHORT_SHA }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ env.COMMIT_SHORT_SHA }}
